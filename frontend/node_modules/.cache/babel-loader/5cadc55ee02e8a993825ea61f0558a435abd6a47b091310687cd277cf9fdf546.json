{"ast":null,"code":"var _jsxFileName = \"/Users/triptigupta/Desktop/systembilling/frontend/src/pages/TransactionsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TransactionTable from \"../components/TransactionTable\";\nimport TransactionForm from \"../components/TransactionForm\";\nimport MoneyTransactionForm from \"../components/MoneyTransactionForm\";\nimport transactionService from \"../services/transactionService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsPage = ({\n  filters\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const fetchTransactions = async () => {\n    try {\n      const response = await transactionService.getFilteredTransactions(filters);\n\n      // Handle axios or plain fetch response\n      const data = (response === null || response === void 0 ? void 0 : response.data) || response;\n\n      // Ensure it's an array (backend should return [] or array of transactions)\n      const clean = Array.isArray(data) ? data : data.transactions || [];\n      setTransactions(clean);\n    } catch (err) {\n      console.error(\"Failed to fetch transactions\", err);\n      setTransactions([]);\n    }\n  };\n  useEffect(() => {\n    fetchTransactions();\n  }, [filters, refreshTrigger]);\n  const handleRefresh = () => setRefreshTrigger(prev => prev + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n      onSave: handleRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoneyTransactionForm, {\n      type: \"party\",\n      onSave: handleRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoneyTransactionForm, {\n      type: \"factory\",\n      onSave: handleRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionTable, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionsPage, \"QUaHwFytwQETBlh0g9e+mMvbtYk=\");\n_c = TransactionsPage;\nexport default TransactionsPage;\nvar _c;\n$RefreshReg$(_c, \"TransactionsPage\");","map":{"version":3,"names":["React","useState","useEffect","TransactionTable","TransactionForm","MoneyTransactionForm","transactionService","jsxDEV","_jsxDEV","TransactionsPage","filters","_s","transactions","setTransactions","refreshTrigger","setRefreshTrigger","fetchTransactions","response","getFilteredTransactions","data","clean","Array","isArray","err","console","error","handleRefresh","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","type","_c","$RefreshReg$"],"sources":["/Users/triptigupta/Desktop/systembilling/frontend/src/pages/TransactionsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TransactionTable from \"../components/TransactionTable\";\nimport TransactionForm from \"../components/TransactionForm\";\nimport MoneyTransactionForm from \"../components/MoneyTransactionForm\";\nimport transactionService from \"../services/transactionService\";\n\nconst TransactionsPage = ({ filters }) => {\n  const [transactions, setTransactions] = useState([]);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n\n  const fetchTransactions = async () => {\n    try {\n      const response = await transactionService.getFilteredTransactions(filters);\n      \n      // Handle axios or plain fetch response\n      const data = response?.data || response;\n\n      // Ensure it's an array (backend should return [] or array of transactions)\n      const clean = Array.isArray(data) ? data : data.transactions || [];\n      setTransactions(clean);\n    } catch (err) {\n      console.error(\"Failed to fetch transactions\", err);\n      setTransactions([]);\n    }\n  };\n\n  useEffect(() => {\n    fetchTransactions();\n  }, [filters, refreshTrigger]);\n\n  const handleRefresh = () => setRefreshTrigger(prev => prev + 1);\n\n  return (\n    <div className=\"space-y-8\">\n      <h1 className=\"text-2xl font-bold\">Transactions</h1>\n\n      {/* Scrap Transaction Form */}\n      <TransactionForm onSave={handleRefresh} />\n\n      {/* Money Transactions */}\n      <MoneyTransactionForm type=\"party\" onSave={handleRefresh} />\n      <MoneyTransactionForm type=\"factory\" onSave={handleRefresh} />\n\n      {/* Transaction List */}\n      <TransactionTable transactions={transactions} />\n    </div>\n  );\n};\n\nexport default TransactionsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,oBAAoB,MAAM,oCAAoC;AACrE,OAAOC,kBAAkB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAMe,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,kBAAkB,CAACY,uBAAuB,CAACR,OAAO,CAAC;;MAE1E;MACA,MAAMS,IAAI,GAAG,CAAAF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI,KAAIF,QAAQ;;MAEvC;MACA,MAAMG,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAGA,IAAI,CAACP,YAAY,IAAI,EAAE;MAClEC,eAAe,CAACO,KAAK,CAAC;IACxB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEF,GAAG,CAAC;MAClDV,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdc,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACN,OAAO,EAAEI,cAAc,CAAC,CAAC;EAE7B,MAAMY,aAAa,GAAGA,CAAA,KAAMX,iBAAiB,CAACY,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EAE/D,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBrB,OAAA;MAAIoB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGpDzB,OAAA,CAACJ,eAAe;MAAC8B,MAAM,EAAER;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG1CzB,OAAA,CAACH,oBAAoB;MAAC8B,IAAI,EAAC,OAAO;MAACD,MAAM,EAAER;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5DzB,OAAA,CAACH,oBAAoB;MAAC8B,IAAI,EAAC,SAAS;MAACD,MAAM,EAAER;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG9DzB,OAAA,CAACL,gBAAgB;MAACS,YAAY,EAAEA;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACtB,EAAA,CAzCIF,gBAAgB;AAAA2B,EAAA,GAAhB3B,gBAAgB;AA2CtB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}