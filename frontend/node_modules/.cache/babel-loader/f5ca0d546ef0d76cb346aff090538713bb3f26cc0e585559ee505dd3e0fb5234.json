{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5001/api';\n\n// Fetch all parties\nexport const getParties = () => {\n  return axios.get(`${API_URL}/parties`);\n};\n\n// Fetch all factories\nexport const getFactories = () => {\n  return axios.get(`${API_URL}/factories`);\n};\n\n// Get dashboard data for a party by ID, with optional filters\nexport const getPartyDashboard = (partyId, filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/party/${partyId}?${params.toString()}`);\n};\n\n// Get dashboard data for a factory by ID, with optional filters\nexport const getFactoryDashboard = (factoryId, filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/factory/${factoryId}?${params.toString()}`);\n};\n\n// Get transactions filtered by various criteria\nexport const getFilteredTransactions = (filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/transactions/filter?${params.toString()}`);\n};\n\n// Download PDF report for party dashboard\nexport const downloadPartyReportPDF = (partyId, filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/party/${partyId}/report/pdf?${params.toString()}`, {\n    responseType: 'blob'\n  });\n};\n\n// Download Excel report for party dashboard\nexport const downloadPartyReportExcel = (partyId, filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/party/${partyId}/report/excel?${params.toString()}`, {\n    responseType: 'blob'\n  });\n};\n\n// Download PDF report for factory dashboard\nexport const downloadFactoryReportPDF = (factoryId, filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/factory/${factoryId}/report/pdf?${params.toString()}`, {\n    responseType: 'blob'\n  });\n};\n\n// Download Excel report for factory dashboard\nexport const downloadFactoryReportExcel = (factoryId, filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/factory/${factoryId}/report/excel?${params.toString()}`, {\n    responseType: 'blob'\n  });\n};","map":{"version":3,"names":["axios","API_URL","getParties","get","getFactories","getPartyDashboard","partyId","filters","params","URLSearchParams","toString","getFactoryDashboard","factoryId","getFilteredTransactions","downloadPartyReportPDF","responseType","downloadPartyReportExcel","downloadFactoryReportPDF","downloadFactoryReportExcel"],"sources":["/Users/triptigupta/Desktop/systembilling/frontend/src/services/dashboardService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5001/api';\n\n// Fetch all parties\nexport const getParties = () => {\n  return axios.get(`${API_URL}/parties`);\n};\n\n// Fetch all factories\nexport const getFactories = () => {\n  return axios.get(`${API_URL}/factories`);\n};\n\n// Get dashboard data for a party by ID, with optional filters\nexport const getPartyDashboard = (partyId, filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/party/${partyId}?${params.toString()}`);\n};\n\n// Get dashboard data for a factory by ID, with optional filters\nexport const getFactoryDashboard = (factoryId, filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/factory/${factoryId}?${params.toString()}`);\n};\n\n// Get transactions filtered by various criteria\nexport const getFilteredTransactions = (filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/transactions/filter?${params.toString()}`);\n};\n\n// Download PDF report for party dashboard\nexport const downloadPartyReportPDF = (partyId, filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/party/${partyId}/report/pdf?${params.toString()}`, {\n    responseType: 'blob',\n  });\n};\n\n// Download Excel report for party dashboard\nexport const downloadPartyReportExcel = (partyId, filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/party/${partyId}/report/excel?${params.toString()}`, {\n    responseType: 'blob',\n  });\n};\n\n// Download PDF report for factory dashboard\nexport const downloadFactoryReportPDF = (factoryId, filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/factory/${factoryId}/report/pdf?${params.toString()}`, {\n    responseType: 'blob',\n  });\n};\n\n// Download Excel report for factory dashboard\nexport const downloadFactoryReportExcel = (factoryId, filters = {}) => {\n  const params = new URLSearchParams(filters);\n  return axios.get(`${API_URL}/dashboard/factory/${factoryId}/report/excel?${params.toString()}`, {\n    responseType: 'blob',\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}