{"ast":null,"code":"var _jsxFileName = \"/Users/triptigupta/Desktop/systembilling/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// App.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport DashboardPage from \"./pages/DashboardPage\";\nimport PartiesPage from \"/pages/PartiesPage\";\nimport FactoriesPage from \"./pages/FactoriesPage\";\nimport TransactionsPage from \"./pages/TransactionsPage\";\nimport Sidebar from \"./components/Sidebar\";\nimport HisabTally from \"./pages/HisabTally\";\nimport { getParties, getFactories } from \"./services/dashboardService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Global filter state\n  const [filters, setFilters] = useState({\n    partyId: null,\n    factoryId: null,\n    startDate: \"\",\n    endDate: \"\"\n  });\n\n  // Dropdown options for parties and factories\n  const [parties, setParties] = useState([]);\n  const [factories, setFactories] = useState([]);\n\n  // Fetch parties and factories dropdown data once on mount\n  useEffect(() => {\n    async function fetchDropdowns() {\n      try {\n        const [partyRes, factoryRes] = await Promise.all([getParties(), getFactories()]);\n        setParties(partyRes.data || []);\n        setFactories(factoryRes.data || []);\n      } catch (error) {\n        console.error(\"Error loading parties or factories\", error);\n      }\n    }\n    fetchDropdowns();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex min-h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 p-6 bg-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(DashboardPage, {\n              filters: filters,\n              setFilters: setFilters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/parties\",\n            element: /*#__PURE__*/_jsxDEV(PartiesPage, {\n              filters: filters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/factories\",\n            element: /*#__PURE__*/_jsxDEV(FactoriesPage, {\n              filters: filters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/transactions\",\n            element: /*#__PURE__*/_jsxDEV(TransactionsPage, {\n              filters: filters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/hisab-tally\",\n            element: /*#__PURE__*/_jsxDEV(HisabTally, {\n              filters: filters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pa45ZRPd1GDIbPo2p8sUgu6SBHM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Layout","DashboardPage","PartiesPage","FactoriesPage","TransactionsPage","Sidebar","HisabTally","getParties","getFactories","jsxDEV","_jsxDEV","App","_s","filters","setFilters","partyId","factoryId","startDate","endDate","parties","setParties","factories","setFactories","fetchDropdowns","partyRes","factoryRes","Promise","all","data","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Navigate","to","replace","_c","$RefreshReg$"],"sources":["/Users/triptigupta/Desktop/systembilling/frontend/src/App.jsx"],"sourcesContent":["// App.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport DashboardPage from \"./pages/DashboardPage\";\nimport PartiesPage from \"/pages/PartiesPage\";\nimport FactoriesPage from \"./pages/FactoriesPage\";\nimport TransactionsPage from \"./pages/TransactionsPage\";\n\n\nimport Sidebar from \"./components/Sidebar\";\nimport HisabTally from \"./pages/HisabTally\";\n\nimport { getParties, getFactories } from \"./services/dashboardService\";\n\nconst App = () => {\n  // Global filter state\n  const [filters, setFilters] = useState({\n    partyId: null,\n    factoryId: null,\n    startDate: \"\",\n    endDate: \"\",\n  });\n\n  // Dropdown options for parties and factories\n  const [parties, setParties] = useState([]);\n  const [factories, setFactories] = useState([]);\n\n  // Fetch parties and factories dropdown data once on mount\n  useEffect(() => {\n    async function fetchDropdowns() {\n      try {\n        const [partyRes, factoryRes] = await Promise.all([getParties(), getFactories()]);\n        setParties(partyRes.data || []);\n        setFactories(factoryRes.data || []);\n      } catch (error) {\n        console.error(\"Error loading parties or factories\", error);\n      }\n    }\n    fetchDropdowns();\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"flex min-h-screen\">\n        <Sidebar />\n\n        <main className=\"flex-1 p-6 bg-gray-100\">\n\n          <Routes>\n            <Route path=\"/\" element={<Navigate to=\"/dashboard\" replace />} />\n            <Route element={<Layout />}></Route>\n\n            {/* Pass filters and setFilters to pages that might update filters */}\n            <Route\n              path=\"/dashboard\"\n              element={<DashboardPage filters={filters} setFilters={setFilters} />}\n            />\n\n            {/* Other pages get filters if they need it */}\n            <Route path=\"/parties\" element={<PartiesPage filters={filters} />} />\n            <Route path=\"/factories\" element={<FactoriesPage filters={filters} />} />\n            <Route path=\"/transactions\" element={<TransactionsPage filters={filters} />} />\n            <Route path=\"/hisab-tally\" element={<HisabTally filters={filters} />} />\n          </Routes>\n        </main>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}